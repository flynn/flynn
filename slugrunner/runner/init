#!/bin/bash
## Load slug from Bind Mount, Artifacts dir, URL or STDIN

set -eo pipefail

export HOME=/app
mkdir -p "${HOME}"

if [[ -n $(ls -A "${HOME}") ]]; then
  true
elif [[ -s "/artifacts/slug.tgz" ]]; then
  tar xzf "/artifacts/slug.tgz" -C "${HOME}"
elif ! [[ -z "${SLUG_URL}" ]]; then
  curl --silent --location --noproxy "discoverd" --retry 5 --fail "${SLUG_URL}" | tar -xzC "${HOME}"
  unset SLUG_URL
else
  cat | tar -xzC "${HOME}"
fi
cd "${HOME}"

## Set home to $HOME

usermod --home $HOME nobody

## Load profile.d and release config

shopt -s nullglob
mkdir -p .profile.d
if [[ -s .release ]]; then
  ruby -r yaml > .profile.d/config_vars <<-RUBY
release = YAML.load_file('.release') || {}
config = release['config_vars'] || {}
config.each_pair do |k, v|
  puts "#{k}=\${#{k}:-'#{v}'}"
end
RUBY
fi
for file in .profile.d/*; do
  source "${file}"
done
hash -r

## Inject "start" command to run processes defined in Procfile

case "$1" in
  start)
    if [[ -f Procfile ]]; then
      command=$(ruby -r yaml -e "puts YAML.load_file('Procfile')['$2']")
    else
      command=$(ruby -r yaml -e "puts (YAML.load_file('.release') || {}).fetch('default_process_types', {})['$2']")
    fi
    ;;
  *)
    printf -v command " %q" "$@"
    ;;
esac

## Run!

chown -R nobody:nogroup .
exec setuidgid nobody bash -c "${command}"
