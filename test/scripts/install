#!/bin/bash

set -e

RAMDISK_SIZE="448G"
GO_VERSION="1.9.2"

ROOT="$(cd "$(dirname "$0")/../.." && pwd)"
source "${ROOT}/script/lib/ui.sh"

main() {
  local user="flynn-test"
  local dir="/opt/flynn-test"
  local src_dir="${dir}/src/github.com/flynn/flynn"
  local build_dir="${dir}/build"

  info "installing dependencies"
  apt-get install -y build-essential zerofree qemu qemu-kvm

  info "creating ${user} user"
  if ! id "${user}" &>/dev/null; then
    useradd --system --home "${dir}" --user-group --groups "kvm" -M "${user}"
  fi

  info "cloning Flynn repo"
  if [[ ! -d "${src_dir}/.git" ]]; then
    rm -rf "${src_dir}"
    git clone --quiet "https://github.com/flynn/flynn.git" "${src_dir}"
  fi

  info "mounting build directory"
  mkdir -p "${build_dir}"
  if ! grep -qF "${build_dir}" /etc/fstab; then
    echo "tmpfs ${build_dir} tmpfs defaults,size=${RAMDISK_SIZE} 0 0" >> /etc/fstab
  fi
  if ! mount | grep -q "${build_dir}"; then
    mount "${build_dir}"
  fi

  info "fixing permissions"
  chown -R "${user}:${user}" "${dir}"

  info "installing systemd unit"
  install_systemd_unit

  info "installing Go ${GO_VERSION}"
  install_go

  info "installing jchroot"
  install_jchroot

  info
  info "install finished!"
  info "you should add credentials to ${dir}/.credentials then start flynn-test (sudo systemctl start flynn-test)"
}

install_go() {
  if go version 2>&1 | grep -qF "go${GO_VERSION}"; then
    return
  fi

  local tmp="$(mktemp --directory)"
  trap "rm -rf ${tmp}" EXIT
  pushd "${tmp}" &>/dev/null
  curl -s "https://storage.googleapis.com/flynn-misc/godeb.tar.gz" | tar xz
  ./godeb install "${GO_VERSION}"
  popd &>/dev/null
}

install_jchroot() {
  local target="/usr/local/bin/jchroot"

  if [[ -s "${target}" ]]; then
    return
  fi

  local tmp="$(mktemp --directory)"
  trap "rm -rf ${tmp}" EXIT
  git clone "https://github.com/vincentbernat/jchroot.git" "${tmp}/jchroot"
  pushd "${tmp}/jchroot" &>/dev/null
  make
  mv "jchroot" "${target}"
  popd &>/dev/null
}

install_systemd_unit() {
  cp "${src_dir}/test/scripts/start.sh" "${dir}/start.sh"

  cat > /lib/systemd/system/flynn-test.service <<EOF
[Unit]
Description=Flynn CI Runner
Documentation=https://flynn.io/docs
After=network.target

[Service]
Type=simple
ExecStart=/opt/flynn-test/start.sh
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOF

  systemctl enable flynn-test.service
}
main $@
