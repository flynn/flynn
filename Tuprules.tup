export GOPATH
export GOROOT
export GIT_COMMIT
export GIT_BRANCH
export GIT_TAG
export GIT_DIRTY
export GO_BUILD_TAGS

VPKG = github.com/flynn/flynn/pkg/version
ROOT = $(TUP_CWD)
GO_LDFLAGS = -ldflags="-X $(VPKG).commit=$GIT_COMMIT -X $(VPKG).branch=$GIT_BRANCH -X $(VPKG).tag=$GIT_TAG -X $(VPKG).dirty=$GIT_DIRTY"
GO = $(ROOT)/util/_toolchain/go/bin/go

!go = |> ^c go build %o^ CGO_ENABLED=0 $(GO) build $(GO_LDFLAGS) -o %o -tags="$GO_BUILD_TAGS" |>
!cgo = |> ^c go build %o^ $(GO) build -o %o $(GO_LDFLAGS) -tags="$GO_BUILD_TAGS" |>
!docker = |> ^ docker build %d^ docker build -t flynn/%d . | tee %o |> $(ROOT)/log/docker-%d.log <docker>
!docker-bootstrapped = |> ^ docker build %d^ docker build -t flynn/%d . | tee %o |> $(ROOT)/log/docker-bootstrapped/%d.log $(ROOT)/<bootstrapped>
!docker-cedarish = |> ^ docker build %d^ cat $(ROOT)/log/docker-cedarish.log > /dev/null && docker build -t flynn/%d . | tee %o |> $(ROOT)/log/docker-bootstrapped/%d.log $(ROOT)/<bootstrapped>
!cp = |> cp %f %o |>
!manifest = | $(ROOT)/util/release/flynn-release |> $(ROOT)/util/release/flynn-release manifest --output=%o --image-repository=@(IMAGE_REPOSITORY) manifest_template.json |> bin/manifest.json
